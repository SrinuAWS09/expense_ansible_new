- name: backend steps
  hosts: backend
  become: yes
  vars: 
    root_password: ExpenseApp@1
    host: mysql.daws82srinu.online
  tasks:
  - name: disable
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable 
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql
  - name: user
    ansible.builtin.user:
      name: expense

  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: extract the file
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: ansible to install software
    ansible.builtin.pip:
      name: 
      - PyMySQL
      executable: pip3.9

  - name: import mysql data 
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ root_password }}"
      login_host: "{{ host }}"
      target: /app/schema/backend.sql
      name: all 
      state: import